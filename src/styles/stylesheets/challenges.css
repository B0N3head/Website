.challenge-table-section {
  padding: 2rem 1rem;
}

.table-wrapper {
  overflow-x: auto;
  max-width: 100%;
  margin: 0 auto;
}

.challenge-table {
  width: 100%;
  border-collapse: collapse;
  color: #fff;
  background-color: #1a1a1a;
  min-width: 600px;
  border-radius: 1%;
}

.challenge-table thead {
  background-color: #2a2a2a;
}

.challenge-table th,
.challenge-table td {
  padding: 1rem;
  text-align: left;
  border-bottom: 1px solid #444;
}

.challenge-table th {
  font-weight: 600;
  color: #e5e5e5;
}


/* 1) Make each row a positioning context and add a smooth transform */
.challenge-table tbody tr {
  position: relative;
  cursor: pointer;
  transform-origin: left center; /* grow from left edge */
}

.challenge-table tbody tr:hover {
  background-color: #292929;
}


/* 3) Create a right‐side pink arrow pseudo element */
.challenge-table tbody tr::after {
  content: '➜';
  position: absolute;
  top: 50%;
  right: 1rem;
  transform: translateY(-50%);
  font-size: 1.2rem;
  color: #FF00E6;
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

/* 4) Fade the arrow in on hover */
.challenge-table tbody tr:hover::after {
  opacity: 1;
}

.controls-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  gap: 1rem; /* equivalent to Tailwind’s gap-4 */
}

.controls-spacing {
  padding: 10px 5px;
}

.search-bar {
  margin-left: 20px;
  margin-right: 20px;
  padding: 0.5rem 1rem;
  border: 1px solid #444;
  border-radius: 0.375rem;
  background-color: #1a1a1a;
  color: #fff;
  font-size: 1rem;
  flex-grow: 1;
}

.search-bar::placeholder {
  color: #999;
}


th.sortable {
  cursor: pointer;
  position: relative;
}

th.sortable::after {
  content: "⇅";
  font-size: 0.75rem;
  position: absolute;
  right: 0.5rem;
  color: #777;
}

/* Remove gaps between all filter buttons */
.filter-buttons, 
.filter-buttons.grid {
  gap: 0;
  padding: 10px 20px;    /* keep container padding if you want space around edges */
}

/* If you also want to remove the container padding, set padding to 0 */
.filter-buttons.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  margin-bottom: 1rem;
}

.filter-buttons {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;    /* center items on each row */
  align-content: center;      /* center rows if container has extra height */
  gap: 0.75rem;
  padding: 10px 20px;
  margin-bottom: 10px;
}

.filter-btn {
  font-size: 15px;
  padding: 0.2rem 0.5rem;
  border: 1px solid #ccc;
  background: #272727;
  cursor: pointer;
  transition: background 0.2s, border-color 0.2s;
}

.filter-btn:hover {
  background-color: #FF8BF4 !important;
}

.filter-btn.active {
  background-color: #FF00E6;
  color: white;
}


.section-padding {
  padding: 10px 75px;
  margin-bottom: 200px;
}



/* 1. Base: allow horizontal scroll on very narrow screens */
.table-wrapper {
  overflow-x: auto;
}

/* Default: show buttons, hide select */
.filter-buttons { display: flex; }
.filter-dropdown { display: none; }




/* -------------------------------------------------------------------
   Base: hide mobile sort dropdown on desktop
   ------------------------------------------------------------------- */

.sort-dropdown-container {
  display: none;
  position: relative;    /* for absolutely positioned list */
}















/* 2. Mobile breakpoint */
@media (max-width: 600px) {

  .sort-dropdown-container {
  display: block; /* visible only on mobile */
  margin-bottom: 1rem;
}


  .filter-buttons { display: none; }

  .filter-dropdown {
    display: block;
    width: 100%;
    padding: 0.75rem 1rem;
    margin-bottom: 1rem;
    background-color: #1f1f1f;
    color: #fff;
    border: 1px solid #444;
    border-radius: 0.375rem;
    font-size: 1rem;
  }

   .challenge-table {
    min-width: 0 !important;
    width: 100%;
  }

    /* Remove all horizontal padding around the table */
  .challenge-table-section,
  .section-padding {
    padding-left: 10px !important;
    padding-right: 10px !important;
  }

  /* If you’re using the px-6 utility on your wrapper, override it */
  .table-wrapper.px-6 {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }

  /* Ensure the wrapper itself doesn’t introduce new padding */
  .table-wrapper {
    padding: 0;      /* remove any custom padding */
    margin: 0 auto;  /* keep centering if desired */
  }

  /* a) Make all table elements display as blocks */
  .challenge-table,
  .challenge-table thead,
  .challenge-table tbody,
  .challenge-table th,
  .challenge-table td,
  .challenge-table tr {
    display: block;
  }

  /* b) Hide the table header row (we’ll show labels inside each cell) */
  .challenge-table thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px;
  }

  .challenge-table {
    background-color: transparent;
  }

  /* c) Give each row a “card” look */
  .challenge-table tr {
    border: 1px solid #444;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    padding: 0.5rem;
    background: #2d2d2d;
  }

  /* d) Style each cell with a label before its content */
  .challenge-table td {
    position: relative;
    padding: 0.75rem 0.75rem 0.75rem 6rem; /* leave space for the label */
    text-align: left;
    border: none;
    border-bottom: 1px solid #444;
  }

  /* Remove bottom border on last cell */
  .challenge-table tr td:last-child {
    border-bottom: none;
  }

  /* e) Inject the label via ::before */
  .challenge-table td:before {
    position: absolute;
    top: 50%;
    left: 0.75rem;
    width: 4rem;
    transform: translateY(-50%);
    font-weight: bold;
    white-space: nowrap;
  }

  /* f) Define labels for each column */
  .challenge-table td:nth-of-type(1):before { content: "ID"; }
  .challenge-table td:nth-of-type(2):before { content: "Project"; }
  .challenge-table td:nth-of-type(3):before { content: "Difficulty"; }
  .challenge-table td:nth-of-type(4):before { content: "Topic"; }

  .sort-dropdown-container {
    display: block;
    margin-bottom: 1rem;
    margin-left: 20px;
    margin-right: 20px;
    width: 100%;
  }

  /* Dropdown button styling (unchanged) */
.sort-dropdown-toggle {
  background-color: #1f1f1f;
  color: #eaeaea;
  padding: 0.5rem 1rem;
  border: 1px solid #444;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: background-color 0.2s ease;
  width: 100%;           /* full‐width on mobile */
  box-sizing: border-box;
  text-align: left;

}
.sort-dropdown-toggle:hover {
  background-color: #2d2d2d;
}

/* Dropdown list hidden by default */
.sort-dropdown-list {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  max-width: 240px;      /* limit width if you like */
  margin-top: 0.25rem;
  background-color: #1f1f1f;
  border: 1px solid #444;
  border-radius: 0.375rem;
  list-style: none;
  padding: 0;
  z-index: 10;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
}

/* Show when JS toggles .show */
.sort-dropdown-list.show {
  display: block;
}

/* Individual items */
.sort-dropdown-item {
  padding: 0.5rem 1rem;
  color: #eaeaea;
  cursor: pointer;
  border-bottom: 1px solid #333;
  transition: background-color 0.15s ease;
}
.sort-dropdown-item:last-child {
  border-bottom: none;
}
.sort-dropdown-item:hover {
  background-color: #2d2d2d;
}


}











